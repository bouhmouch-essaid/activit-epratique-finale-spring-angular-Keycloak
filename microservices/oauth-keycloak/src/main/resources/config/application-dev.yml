# ===================================================================
# Spring Boot configuration for the "prod" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: INFO
    tech.jhipster: INFO
    com.keepllly.auth: INFO

eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: #http://admin:${jhipster.registry.password}@localhost:8761/eureka/

management:
  metrics:
    export:
      prometheus:
        enabled: false

spring:
  devtools:
    restart:
      enabled: false
    livereload:
      enabled: false
  cloud:
    config:
      retry:
        initial-interval: 1000
        max-interval: 2000
        max-attempts: 100
      uri: http://admin:${jhipster.registry.password}@localhost:8761/config
      # name of the config server's property source (file.yml) that we want to use
      name: keepllyauth
      profile: dev
      label: main # toggle to switch to a different version of the configuration as stored in git
      # it can be set to any label, branch or commit of the configuration source Git repository
  data:
    mongodb:
      uri: mongodb://localhost:27017
      database: keepllyauth
  thymeleaf:
    cache: true
  sleuth:
    # https://github.com/spring-projects/spring-framework/issues/27844#issuescomment-1002866885
    # https://github.com/spring-cloud/spring-cloud-sleuth/issues/2094
    async:
      enabled: false
    enabled: false
    sampler:
      probability: 1 # report 100% of traces
  zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
    base-url: http://localhost:9411
    enabled: false
    locator:
      discovery:
        enabled: true

# ===================================================================
# To enable TLS in production, generate a certificate using:
# keytool -genkey -alias keepllyauth -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
#
# You can also use Let's Encrypt:
# See details in topic "Create a Java Keystore (.JKS) from Let's Encrypt Certificates" on https://maximilian-boehm.com/en-gb/blog
#
# Then, modify the server.ssl properties so your "server" configuration looks like:
#
# server:
#   port: 443
#   ssl:
#     key-store: classpath:config/tls/keystore.p12
#     key-store-password: password
#     key-store-type: PKCS12
#     key-alias: selfsigned
#     # The ciphers suite enforce the security by deactivating some old and deprecated SSL cipher, this list was tested against SSL Labs (https://www.ssllabs.com/ssltest/)
#     ciphers: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 ,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA,TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
# ===================================================================
server:
  port: 9086
  shutdown: graceful # see https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-graceful-shutdown
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,application/javascript,application/json,image/svg+xml
    min-response-size: 1024

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  http:
    cache: # Used by the CachingHttpHeadersFilter
      timeToLiveInDays: 1461
  registry:
    password: admin
  mail: # specific JHipster mail property, for standard properties see MailProperties
    from: etablissementfstg@gmail.com
    base-url: http://localhost:8089
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

application:
  expirations-time: #subscription expiration Time in days
    trial: 10
    essential: 30
  mail:
    host: smtp.gmail.com
    port: 587
    username: etablissementfstg@gmail.com
    password: fnsqcybjgcgkzumb
    tls: true
    auth: true
    starttls-enable: true
    ssl-trust: smtp.gmail.com
  services:
    portal:
      service-name: portal
      host: localhost
      port: 9081 #8094
    iolgen:
      service-name: iolgen
      host: localhost
      port: 8081
    barcodegenerator:
      service-name: barcodegenerator
      host: localhost
      port: 8091
    auth:
      service-name: auth
      host: http://localhost
      port: 8086
  realms:
    keeplly:
      realm-name: gestionProduit
      client-id: micro_gestionProduit
      client-secret: D8rlpHx4GcZtkW2tjLgznnpoDlHwl2z5
      grant-type: password
      google:
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        subject-token-type: urn:ietf:params:oauth:token-type:access_token
        client-id: token-exchange
        client-secret: nLJOMXPctIeNJFPGP3NwpfXwD4uejFyR
        subject-issuer: google
    pactum:
      realm-name: realm-pactumcc
      client-id: pactum-app
      client-secret: eIJ77pPESVj33mInY2lN0Twh0YOtPuJF
      grant-type: password
      google:
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        subject-token-type: urn:ietf:params:oauth:token-type:access_token
        client-id: token-exchange
        client-secret: AIGRDDqYSn1oGoVkG6q2IWhLA0S40fZ6
        subject-issuer: google

resilience4j:
  circuitbreaker:
    instances:
      code:
        sliding-window-type: count-based
        sliding-window-size: 10
        minimum-number-of-calls: 4
        failure-rate-threshold: 70
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 2
        automatic-transition-from-open-to-half-open-enabled: true
